#
#   goahead-windows-default.nmake -- Makefile to build Embedthis GoAhead for windows
#

NAME                  = goahead
VERSION               = 6.1.0

OS                    = windows
PA                    = $(PROCESSOR_ARCHITECTURE)
PROJECT               = goahead-windows-default

!IFNDEF PROFILE
PROFILE               = dev
!ENDIF

!IF "$(PA)" == "AMD64"
ARCH                  = x64
CC_ARCH               = x86_64
ENTRY                 = _DllMainCRTStartup
!ELSEIF "$(PA)" == "ARM64"
ARCH                  = arm64
CC_ARCH               = aarch64
ENTRY                 = _DllMainCRTStartup@12
!ELSEIF "$(PA)" == "ARM"
ARCH                  = arm
CC_ARCH               = arm
ENTRY                 = _DllMainCRTStartup@12
!ELSEIF "$(PA)" == "X86"
ARCH                  = x86
CC_ARCH               = i686
ENTRY                 = _DllMainCRTStartup@12
!ELSE
ARCH                  = x64
CC_ARCH               = x86_64
ENTRY                 = _DllMainCRTStartup
!ENDIF

!IFNDEF CONFIG
CONFIG                = $(OS)-$(ARCH)-$(PROFILE)
!ENDIF

!IFNDEF BUILD
BUILD                 = build/$(OS)-$(ARCH)-$(PROFILE)
!ENDIF

!IFNDEF LBIN
LBIN                  = $(BUILD)/bin
!ENDIF

#
# Components
#
!IFNDEF ME_COM_COMPILER
ME_COM_COMPILER       = 1
!ENDIF
!IFNDEF ME_COM_LIB
ME_COM_LIB            = 1
!ENDIF
!IFNDEF ME_COM_LINK
ME_COM_LINK           = 1
!ENDIF
!IFNDEF ME_COM_MBEDTLS
ME_COM_MBEDTLS        = 0
!ENDIF
!IFNDEF ME_COM_OPENSSL
ME_COM_OPENSSL        = 1
!ENDIF
!IFNDEF ME_COM_OSDEP
ME_COM_OSDEP          = 1
!ENDIF
!IFNDEF ME_COM_RC
ME_COM_RC             = 1
!ENDIF
!IFNDEF ME_COM_SSL
ME_COM_SSL            = 1
!ENDIF
!IFNDEF ME_COM_VXWORKS
ME_COM_VXWORKS        = 0
!ENDIF

!IFNDEF ME_COM_MBEDTLS_PATH
ME_COM_MBEDTLS_PATH   = .
!ENDIF
!IFNDEF ME_COM_OPENSSL_PATH
ME_COM_OPENSSL_PATH   = $(USERPROFILE)/vcpkg/installed/x64-windows
!ENDIF

!IF "$(ME_COM_LIB)" == "1"
ME_COM_COMPILER       = 1
!ENDIF

!IF "$(ME_COM_LINK)" == "1"
ME_COM_COMPILER       = 1
!ENDIF

!IF "$(ME_COM_MBEDTLS)" == "1"
ME_COM_SSL            = 1
!ENDIF

!IF "$(ME_COM_OPENSSL)" == "1"
ME_COM_SSL            = 1
!ENDIF

!IF "$(ME_COM_RC)" == "1"
ME_COM_COMPILER       = 1
!ENDIF


#
# Settings
#
!IFNDEF ME_AUTHOR
ME_AUTHOR             = \"Embedthis Software\"
!ENDIF
!IFNDEF ME_CERTS_GENDH
ME_CERTS_GENDH        = 1
!ENDIF
!IFNDEF ME_COMPANY
ME_COMPANY            = \"embedthis\"
!ENDIF
!IFNDEF ME_COMPATIBLE
ME_COMPATIBLE         = \"6.1\"
!ENDIF
!IFNDEF ME_COMPILER_FORTIFY
ME_COMPILER_FORTIFY   = 0
!ENDIF
!IFNDEF ME_COMPILER_HAS_ATOMIC
ME_COMPILER_HAS_ATOMIC = 0
!ENDIF
!IFNDEF ME_COMPILER_HAS_ATOMIC64
ME_COMPILER_HAS_ATOMIC64 = 0
!ENDIF
!IFNDEF ME_COMPILER_HAS_DYN_LOAD
ME_COMPILER_HAS_DYN_LOAD = 1
!ENDIF
!IFNDEF ME_COMPILER_HAS_LIB_EDIT
ME_COMPILER_HAS_LIB_EDIT = 0
!ENDIF
!IFNDEF ME_COMPILER_HAS_LIB_RT
ME_COMPILER_HAS_LIB_RT = 0
!ENDIF
!IFNDEF ME_COMPILER_HAS_MMU
ME_COMPILER_HAS_MMU   = 1
!ENDIF
!IFNDEF ME_COMPILER_HAS_PAM
ME_COMPILER_HAS_PAM   = 0
!ENDIF
!IFNDEF ME_COMPILER_HAS_STACK_PROTECTOR
ME_COMPILER_HAS_STACK_PROTECTOR = 0
!ENDIF
!IFNDEF ME_COMPILER_HAS_SYNC
ME_COMPILER_HAS_SYNC  = 0
!ENDIF
!IFNDEF ME_COMPILER_HAS_SYNC64
ME_COMPILER_HAS_SYNC64 = 0
!ENDIF
!IFNDEF ME_COMPILER_HAS_SYNC_CAS
ME_COMPILER_HAS_SYNC_CAS = 0
!ENDIF
!IFNDEF ME_COMPILER_HAS_UNNAMED_UNIONS
ME_COMPILER_HAS_UNNAMED_UNIONS = 1
!ENDIF
!IFNDEF ME_CONFIGURE
ME_CONFIGURE          = \"me -d -q -platform windows-x64-default -configure . -gen nmake\"
!ENDIF
!IFNDEF ME_CONFIGURED
ME_CONFIGURED         = 1
!ENDIF
!IFNDEF ME_DEBUG
ME_DEBUG              = 1
!ENDIF
!IFNDEF ME_DEPRECATED_WARNINGS
ME_DEPRECATED_WARNINGS = 0
!ENDIF
!IFNDEF ME_DEPTH
ME_DEPTH              = 1
!ENDIF
!IFNDEF ME_DESCRIPTION
ME_DESCRIPTION        = \"Embedthis GoAhead\"
!ENDIF
!IFNDEF ME_GOAHEAD_ACCESS_LOG
ME_GOAHEAD_ACCESS_LOG = 0
!ENDIF
!IFNDEF ME_GOAHEAD_AUTH
ME_GOAHEAD_AUTH       = 1
!ENDIF
!IFNDEF ME_GOAHEAD_AUTH_STORE
ME_GOAHEAD_AUTH_STORE = \"file\"
!ENDIF
!IFNDEF ME_GOAHEAD_AUTO_LOGIN
ME_GOAHEAD_AUTO_LOGIN = 0
!ENDIF
!IFNDEF ME_GOAHEAD_CGI
ME_GOAHEAD_CGI        = 1
!ENDIF
!IFNDEF ME_GOAHEAD_CGI_VAR_PREFIX
ME_GOAHEAD_CGI_VAR_PREFIX = \"CGI_\"
!ENDIF
!IFNDEF ME_GOAHEAD_CLIENT_CACHE
ME_GOAHEAD_CLIENT_CACHE = \"css,gif,ico,jpg,js,png\"
!ENDIF
!IFNDEF ME_GOAHEAD_CLIENT_CACHE_LIFESPAN
ME_GOAHEAD_CLIENT_CACHE_LIFESPAN = 86400
!ENDIF
!IFNDEF ME_GOAHEAD_DIGEST
ME_GOAHEAD_DIGEST     = 1
!ENDIF
!IFNDEF ME_GOAHEAD_DOCUMENTS
ME_GOAHEAD_DOCUMENTS  = \"web\"
!ENDIF
!IFNDEF ME_GOAHEAD_JAVASCRIPT
ME_GOAHEAD_JAVASCRIPT = 1
!ENDIF
!IFNDEF ME_GOAHEAD_LEGACY
ME_GOAHEAD_LEGACY     = 0
!ENDIF
!IFNDEF ME_GOAHEAD_LIMIT_BUFFER
ME_GOAHEAD_LIMIT_BUFFER = 1024
!ENDIF
!IFNDEF ME_GOAHEAD_LIMIT_CGI_ARGS
ME_GOAHEAD_LIMIT_CGI_ARGS = 4096
!ENDIF
!IFNDEF ME_GOAHEAD_LIMIT_FILENAME
ME_GOAHEAD_LIMIT_FILENAME = 256
!ENDIF
!IFNDEF ME_GOAHEAD_LIMIT_FILES
ME_GOAHEAD_LIMIT_FILES = 0
!ENDIF
!IFNDEF ME_GOAHEAD_LIMIT_HEADER
ME_GOAHEAD_LIMIT_HEADER = 2048
!ENDIF
!IFNDEF ME_GOAHEAD_LIMIT_HEADERS
ME_GOAHEAD_LIMIT_HEADERS = 4096
!ENDIF
!IFNDEF ME_GOAHEAD_LIMIT_NUM_HEADERS
ME_GOAHEAD_LIMIT_NUM_HEADERS = 64
!ENDIF
!IFNDEF ME_GOAHEAD_LIMIT_PARSE_TIMEOUT
ME_GOAHEAD_LIMIT_PARSE_TIMEOUT = 5
!ENDIF
!IFNDEF ME_GOAHEAD_LIMIT_PASSWORD
ME_GOAHEAD_LIMIT_PASSWORD = 32
!ENDIF
!IFNDEF ME_GOAHEAD_LIMIT_POST
ME_GOAHEAD_LIMIT_POST = 16384
!ENDIF
!IFNDEF ME_GOAHEAD_LIMIT_PUT
ME_GOAHEAD_LIMIT_PUT  = 204800000
!ENDIF
!IFNDEF ME_GOAHEAD_LIMIT_SESSION_COUNT
ME_GOAHEAD_LIMIT_SESSION_COUNT = 512
!ENDIF
!IFNDEF ME_GOAHEAD_LIMIT_SESSION_LIFE
ME_GOAHEAD_LIMIT_SESSION_LIFE = 1800
!ENDIF
!IFNDEF ME_GOAHEAD_LIMIT_STRING
ME_GOAHEAD_LIMIT_STRING = 256
!ENDIF
!IFNDEF ME_GOAHEAD_LIMIT_TIMEOUT
ME_GOAHEAD_LIMIT_TIMEOUT = 60
!ENDIF
!IFNDEF ME_GOAHEAD_LIMIT_UPLOAD
ME_GOAHEAD_LIMIT_UPLOAD = 204800000
!ENDIF
!IFNDEF ME_GOAHEAD_LIMIT_URI
ME_GOAHEAD_LIMIT_URI  = 2048
!ENDIF
!IFNDEF ME_GOAHEAD_LISTEN
ME_GOAHEAD_LISTEN     = \"http://*:80,https://*:443\"
!ENDIF
!IFNDEF ME_GOAHEAD_LOGFILE
ME_GOAHEAD_LOGFILE    = \"stderr:0\"
!ENDIF
!IFNDEF ME_GOAHEAD_LOGGING
ME_GOAHEAD_LOGGING    = 1
!ENDIF
!IFNDEF ME_GOAHEAD_PUT_DIR
ME_GOAHEAD_PUT_DIR    = \".\"
!ENDIF
!IFNDEF ME_GOAHEAD_REALM
ME_GOAHEAD_REALM      = \"example.com\"
!ENDIF
!IFNDEF ME_GOAHEAD_REPLACE_MALLOC
ME_GOAHEAD_REPLACE_MALLOC = 0
!ENDIF
!IFNDEF ME_GOAHEAD_SSL_AUTHORITY
ME_GOAHEAD_SSL_AUTHORITY = \"\"
!ENDIF
!IFNDEF ME_GOAHEAD_SSL_CACHE
ME_GOAHEAD_SSL_CACHE  = 512
!ENDIF
!IFNDEF ME_GOAHEAD_SSL_CERTIFICATE
ME_GOAHEAD_SSL_CERTIFICATE = \"self.crt\"
!ENDIF
!IFNDEF ME_GOAHEAD_SSL_CIPHERS
ME_GOAHEAD_SSL_CIPHERS = \"\"
!ENDIF
!IFNDEF ME_GOAHEAD_SSL_HANDSHAKES
ME_GOAHEAD_SSL_HANDSHAKES = 3
!ENDIF
!IFNDEF ME_GOAHEAD_SSL_KEY
ME_GOAHEAD_SSL_KEY    = \"self.key\"
!ENDIF
!IFNDEF ME_GOAHEAD_SSL_LOG_LEVEL
ME_GOAHEAD_SSL_LOG_LEVEL = 5
!ENDIF
!IFNDEF ME_GOAHEAD_SSL_REVOKE
ME_GOAHEAD_SSL_REVOKE = \"\"
!ENDIF
!IFNDEF ME_GOAHEAD_SSL_TICKET
ME_GOAHEAD_SSL_TICKET = 1
!ENDIF
!IFNDEF ME_GOAHEAD_SSL_TIMEOUT
ME_GOAHEAD_SSL_TIMEOUT = 86400
!ENDIF
!IFNDEF ME_GOAHEAD_SSL_VERIFY_ISSUER
ME_GOAHEAD_SSL_VERIFY_ISSUER = 0
!ENDIF
!IFNDEF ME_GOAHEAD_SSL_VERIFY_PEER
ME_GOAHEAD_SSL_VERIFY_PEER = 0
!ENDIF
!IFNDEF ME_GOAHEAD_STEALTH
ME_GOAHEAD_STEALTH    = 1
!ENDIF
!IFNDEF ME_GOAHEAD_TRACING
ME_GOAHEAD_TRACING    = 1
!ENDIF
!IFNDEF ME_GOAHEAD_UPLOAD
ME_GOAHEAD_UPLOAD     = 1
!ENDIF
!IFNDEF ME_GOAHEAD_UPLOAD_DIR
ME_GOAHEAD_UPLOAD_DIR = \"tmp\"
!ENDIF
!IFNDEF ME_GOAHEAD_XFRAME_HEADER
ME_GOAHEAD_XFRAME_HEADER = \"SAMEORIGIN\"
!ENDIF
!IFNDEF ME_INTEGRATE
ME_INTEGRATE          = 1
!ENDIF
!IFNDEF ME_MANIFEST
ME_MANIFEST           = \"installs/manifest.me\"
!ENDIF
!IFNDEF ME_MBEDTLS_COMPACT
ME_MBEDTLS_COMPACT    = 1
!ENDIF
!IFNDEF ME_NAME
ME_NAME               = \"goahead\"
!ENDIF
!IFNDEF ME_OPENSSL_VERSION
ME_OPENSSL_VERSION    = \"1.0\"
!ENDIF
!IFNDEF ME_PARTS
ME_PARTS              = \"undefined\"
!ENDIF
!IFNDEF ME_PREFIXES
ME_PREFIXES           = \"install-prefixes\"
!ENDIF
!IFNDEF ME_ROM
ME_ROM                = 0
!ENDIF
!IFNDEF ME_ROM_TIME
ME_ROM_TIME           = 1505449519432
!ENDIF
!IFNDEF ME_TITLE
ME_TITLE              = \"Embedthis GoAhead\"
!ENDIF
!IFNDEF ME_VERSION
ME_VERSION            = \"6.1.0\"
!ENDIF

!IFNDEF CC
CC                    = cl
!ENDIF

!IFNDEF LD
LD                    = link
!ENDIF

!IFNDEF AR
AR                    = lib
!ENDIF

!IFNDEF RC
RC                    = rc
!ENDIF

!IFNDEF CFLAGS
CFLAGS                = -nologo -GR- -W3 -FS -Zi -Od -MDd
!ELSE
CFLAGS                = $(CFLAGS) -nologo -GR- -W3 -FS -Zi -Od -MDd
!ENDIF

!IFNDEF DFLAGS
DFLAGS                = -DME_DEBUG=1 -D_CRT_SECURE_NO_WARNINGS=1 "-DME_COM_COMPILER=$(ME_COM_COMPILER)" "-DME_COM_LIB=$(ME_COM_LIB)" "-DME_COM_LINK=$(ME_COM_LINK)" "-DME_COM_MBEDTLS=$(ME_COM_MBEDTLS)" "-DME_COM_OPENSSL=$(ME_COM_OPENSSL)" "-DME_COM_OSDEP=$(ME_COM_OSDEP)" "-DME_COM_RC=$(ME_COM_RC)" "-DME_COM_SSL=$(ME_COM_SSL)" "-DME_COM_VXWORKS=$(ME_COM_VXWORKS)" "-DME_CERTS_GENDH=$(ME_CERTS_GENDH)" "-DME_GOAHEAD_ACCESSLOG=$(ME_GOAHEAD_ACCESSLOG)" "-DME_GOAHEAD_AUTH=$(ME_GOAHEAD_AUTH)" "-DME_GOAHEAD_AUTHSTORE=$(ME_GOAHEAD_AUTHSTORE)" "-DME_GOAHEAD_AUTOLOGIN=$(ME_GOAHEAD_AUTOLOGIN)" "-DME_GOAHEAD_CGI=$(ME_GOAHEAD_CGI)" "-DME_GOAHEAD_CGIVARPREFIX=$(ME_GOAHEAD_CGIVARPREFIX)" "-DME_GOAHEAD_CLIENTCACHE=$(ME_GOAHEAD_CLIENTCACHE)" "-DME_GOAHEAD_CLIENTCACHELIFESPAN=$(ME_GOAHEAD_CLIENTCACHELIFESPAN)" "-DME_GOAHEAD_DIGEST=$(ME_GOAHEAD_DIGEST)" "-DME_GOAHEAD_DOCUMENTS=$(ME_GOAHEAD_DOCUMENTS)" "-DME_GOAHEAD_JAVASCRIPT=$(ME_GOAHEAD_JAVASCRIPT)" "-DME_GOAHEAD_LEGACY=$(ME_GOAHEAD_LEGACY)" "-DME_GOAHEAD_LIMITBUFFER=$(ME_GOAHEAD_LIMITBUFFER)" "-DME_GOAHEAD_LIMITCGIARGS=$(ME_GOAHEAD_LIMITCGIARGS)" "-DME_GOAHEAD_LIMITFILENAME=$(ME_GOAHEAD_LIMITFILENAME)" "-DME_GOAHEAD_LIMITFILES=$(ME_GOAHEAD_LIMITFILES)" "-DME_GOAHEAD_LIMITHEADER=$(ME_GOAHEAD_LIMITHEADER)" "-DME_GOAHEAD_LIMITHEADERS=$(ME_GOAHEAD_LIMITHEADERS)" "-DME_GOAHEAD_LIMITNUMHEADERS=$(ME_GOAHEAD_LIMITNUMHEADERS)" "-DME_GOAHEAD_LIMITPARSETIMEOUT=$(ME_GOAHEAD_LIMITPARSETIMEOUT)" "-DME_GOAHEAD_LIMITPASSWORD=$(ME_GOAHEAD_LIMITPASSWORD)" "-DME_GOAHEAD_LIMITPOST=$(ME_GOAHEAD_LIMITPOST)" "-DME_GOAHEAD_LIMITPUT=$(ME_GOAHEAD_LIMITPUT)" "-DME_GOAHEAD_LIMITSESSIONCOUNT=$(ME_GOAHEAD_LIMITSESSIONCOUNT)" "-DME_GOAHEAD_LIMITSESSIONLIFE=$(ME_GOAHEAD_LIMITSESSIONLIFE)" "-DME_GOAHEAD_LIMITSTRING=$(ME_GOAHEAD_LIMITSTRING)" "-DME_GOAHEAD_LIMITTIMEOUT=$(ME_GOAHEAD_LIMITTIMEOUT)" "-DME_GOAHEAD_LIMITUPLOAD=$(ME_GOAHEAD_LIMITUPLOAD)" "-DME_GOAHEAD_LIMITURI=$(ME_GOAHEAD_LIMITURI)" "-DME_GOAHEAD_LISTEN=$(ME_GOAHEAD_LISTEN)" "-DME_GOAHEAD_LOGFILE=$(ME_GOAHEAD_LOGFILE)" "-DME_GOAHEAD_LOGGING=$(ME_GOAHEAD_LOGGING)" "-DME_GOAHEAD_PUTDIR=$(ME_GOAHEAD_PUTDIR)" "-DME_GOAHEAD_REALM=$(ME_GOAHEAD_REALM)" "-DME_GOAHEAD_REPLACE_MALLOC=$(ME_GOAHEAD_REPLACE_MALLOC)" "-DME_GOAHEAD_SSL=$(ME_GOAHEAD_SSL)" "-DME_GOAHEAD_STEALTH=$(ME_GOAHEAD_STEALTH)" "-DME_GOAHEAD_TRACING=$(ME_GOAHEAD_TRACING)" "-DME_GOAHEAD_UPLOAD=$(ME_GOAHEAD_UPLOAD)" "-DME_GOAHEAD_UPLOADDIR=$(ME_GOAHEAD_UPLOADDIR)" "-DME_GOAHEAD_XFRAMEHEADER=$(ME_GOAHEAD_XFRAMEHEADER)" "-DME_MBEDTLS_COMPACT=$(ME_MBEDTLS_COMPACT)" "-DME_OPENSSL_VERSION=$(ME_OPENSSL_VERSION)" 
!ELSE
DFLAGS                = $(DFLAGS) -DME_DEBUG=1 -D_CRT_SECURE_NO_WARNINGS=1 "-DME_COM_COMPILER=$(ME_COM_COMPILER)" "-DME_COM_LIB=$(ME_COM_LIB)" "-DME_COM_LINK=$(ME_COM_LINK)" "-DME_COM_MBEDTLS=$(ME_COM_MBEDTLS)" "-DME_COM_OPENSSL=$(ME_COM_OPENSSL)" "-DME_COM_OSDEP=$(ME_COM_OSDEP)" "-DME_COM_RC=$(ME_COM_RC)" "-DME_COM_SSL=$(ME_COM_SSL)" "-DME_COM_VXWORKS=$(ME_COM_VXWORKS)" "-DME_CERTS_GENDH=$(ME_CERTS_GENDH)" "-DME_GOAHEAD_ACCESSLOG=$(ME_GOAHEAD_ACCESSLOG)" "-DME_GOAHEAD_AUTH=$(ME_GOAHEAD_AUTH)" "-DME_GOAHEAD_AUTHSTORE=$(ME_GOAHEAD_AUTHSTORE)" "-DME_GOAHEAD_AUTOLOGIN=$(ME_GOAHEAD_AUTOLOGIN)" "-DME_GOAHEAD_CGI=$(ME_GOAHEAD_CGI)" "-DME_GOAHEAD_CGIVARPREFIX=$(ME_GOAHEAD_CGIVARPREFIX)" "-DME_GOAHEAD_CLIENTCACHE=$(ME_GOAHEAD_CLIENTCACHE)" "-DME_GOAHEAD_CLIENTCACHELIFESPAN=$(ME_GOAHEAD_CLIENTCACHELIFESPAN)" "-DME_GOAHEAD_DIGEST=$(ME_GOAHEAD_DIGEST)" "-DME_GOAHEAD_DOCUMENTS=$(ME_GOAHEAD_DOCUMENTS)" "-DME_GOAHEAD_JAVASCRIPT=$(ME_GOAHEAD_JAVASCRIPT)" "-DME_GOAHEAD_LEGACY=$(ME_GOAHEAD_LEGACY)" "-DME_GOAHEAD_LIMITBUFFER=$(ME_GOAHEAD_LIMITBUFFER)" "-DME_GOAHEAD_LIMITCGIARGS=$(ME_GOAHEAD_LIMITCGIARGS)" "-DME_GOAHEAD_LIMITFILENAME=$(ME_GOAHEAD_LIMITFILENAME)" "-DME_GOAHEAD_LIMITFILES=$(ME_GOAHEAD_LIMITFILES)" "-DME_GOAHEAD_LIMITHEADER=$(ME_GOAHEAD_LIMITHEADER)" "-DME_GOAHEAD_LIMITHEADERS=$(ME_GOAHEAD_LIMITHEADERS)" "-DME_GOAHEAD_LIMITNUMHEADERS=$(ME_GOAHEAD_LIMITNUMHEADERS)" "-DME_GOAHEAD_LIMITPARSETIMEOUT=$(ME_GOAHEAD_LIMITPARSETIMEOUT)" "-DME_GOAHEAD_LIMITPASSWORD=$(ME_GOAHEAD_LIMITPASSWORD)" "-DME_GOAHEAD_LIMITPOST=$(ME_GOAHEAD_LIMITPOST)" "-DME_GOAHEAD_LIMITPUT=$(ME_GOAHEAD_LIMITPUT)" "-DME_GOAHEAD_LIMITSESSIONCOUNT=$(ME_GOAHEAD_LIMITSESSIONCOUNT)" "-DME_GOAHEAD_LIMITSESSIONLIFE=$(ME_GOAHEAD_LIMITSESSIONLIFE)" "-DME_GOAHEAD_LIMITSTRING=$(ME_GOAHEAD_LIMITSTRING)" "-DME_GOAHEAD_LIMITTIMEOUT=$(ME_GOAHEAD_LIMITTIMEOUT)" "-DME_GOAHEAD_LIMITUPLOAD=$(ME_GOAHEAD_LIMITUPLOAD)" "-DME_GOAHEAD_LIMITURI=$(ME_GOAHEAD_LIMITURI)" "-DME_GOAHEAD_LISTEN=$(ME_GOAHEAD_LISTEN)" "-DME_GOAHEAD_LOGFILE=$(ME_GOAHEAD_LOGFILE)" "-DME_GOAHEAD_LOGGING=$(ME_GOAHEAD_LOGGING)" "-DME_GOAHEAD_PUTDIR=$(ME_GOAHEAD_PUTDIR)" "-DME_GOAHEAD_REALM=$(ME_GOAHEAD_REALM)" "-DME_GOAHEAD_REPLACE_MALLOC=$(ME_GOAHEAD_REPLACE_MALLOC)" "-DME_GOAHEAD_SSL=$(ME_GOAHEAD_SSL)" "-DME_GOAHEAD_STEALTH=$(ME_GOAHEAD_STEALTH)" "-DME_GOAHEAD_TRACING=$(ME_GOAHEAD_TRACING)" "-DME_GOAHEAD_UPLOAD=$(ME_GOAHEAD_UPLOAD)" "-DME_GOAHEAD_UPLOADDIR=$(ME_GOAHEAD_UPLOADDIR)" "-DME_GOAHEAD_XFRAMEHEADER=$(ME_GOAHEAD_XFRAMEHEADER)" "-DME_MBEDTLS_COMPACT=$(ME_MBEDTLS_COMPACT)" "-DME_OPENSSL_VERSION=$(ME_OPENSSL_VERSION)" 
!ENDIF

!IFNDEF IFLAGS
IFLAGS                = -I$(BUILD)/inc
!ELSE
IFLAGS                = $(IFLAGS) "-I$(BUILD)/inc"
!ENDIF

!IFNDEF LDFLAGS
LDFLAGS               = -nologo -incremental:no -dynamicbase -nxcompat -debug -machine:$(ARCH)
!ELSE
LDFLAGS               = $(LDFLAGS) -nologo -incremental:no -dynamicbase -nxcompat -debug -machine:$(ARCH)
!ENDIF

!IFNDEF LIBPATHS
LIBPATHS              = "-libpath:$(BUILD)/bin"
!ELSE
LIBPATHS              = $(LIBPATHS) "-libpath:$(BUILD)/bin"
!ENDIF

!IFNDEF LIBS
LIBS                  = ws2_32.lib advapi32.lib user32.lib kernel32.lib oldnames.lib shell32.lib
!ELSE
LIBS                  = $(LIBS) ws2_32.lib advapi32.lib user32.lib kernel32.lib oldnames.lib shell32.lib
!ENDIF

ME_ROOT_PREFIX        = C:
ME_BASE_PREFIX        = $(ME_ROOT_PREFIX)/Program Files
ME_APP_PREFIX         = $(ME_BASE_PREFIX)/Embedthis GoAhead
ME_VAPP_PREFIX        = $(ME_APP_PREFIX)
ME_DATA_PREFIX        = $(ME_VAPP_PREFIX)
ME_STATE_PREFIX       = $(ME_VAPP_PREFIX)
ME_BIN_PREFIX         = $(ME_VAPP_PREFIX)/bin
ME_INC_PREFIX         = $(ME_VAPP_PREFIX)/inc
ME_LIB_PREFIX         = $(ME_VAPP_PREFIX)/lib
ME_MAN_PREFIX         = $(ME_VAPP_PREFIX)/man
ME_ETC_PREFIX         = $(ME_VAPP_PREFIX)
ME_WEB_PREFIX         = $(ME_VAPP_PREFIX)/web
ME_LOG_PREFIX         = $(ME_VAPP_PREFIX)/log
ME_SPOOL_PREFIX       = $(ME_VAPP_PREFIX)/tmp
ME_CACHE_PREFIX       = $(ME_VAPP_PREFIX)/cache
ME_SRC_PREFIX         = $(ME_VAPP_PREFIX)/src


TARGETS               = $(TARGETS) $(BUILD)/bin/cgitest.exe
TARGETS               = $(TARGETS) $(BUILD)/bin/goahead.exe
TARGETS               = $(TARGETS) $(BUILD)/bin/goahead-test.exe
TARGETS               = $(TARGETS) $(BUILD)/bin/gopass.exe

!IFNDEF SHOW
.SILENT:
!ENDIF

all build compile: prep $(TARGETS)

.PHONY: prep

prep:
!IFNDEF VSINSTALLDIR
	echo "Visual Studio vars not set. Run vcvars.bat."
	exit 255
!ENDIF
!IFNDEF ME_APP_PREFIX
	echo "ME_APP_PREFIX not set."
	exit 255
!ENDIF
	@echo Building for $(CC_ARCH)
	@if not exist "$(BUILD)/bin" md "$(BUILD)/bin"
	@if not exist "$(BUILD)/inc" md "$(BUILD)/inc"
	@if not exist "$(BUILD)/obj" md "$(BUILD)/obj"
	@powershell -Command "Copy-Item \"projects/$(PROJECT)-me.h\" \"$(BUILD)/inc/me.h\" -ErrorAction SilentlyContinue | Out-Null"
	powershell -ExecutionPolicy Bypass -File bin/prep-build.ps1
    @if exist "$(USERPROFILE)/vcpkg/installed/$(ARCH)-windows/bin/libcrypto-3-$(ARCH).dll" powershell -Command "Copy-Item \"$(USERPROFILE)/vcpkg/installed/$(ARCH)-windows/bin/libcrypto-*.dll\" \"$(BUILD)/bin/\" -Force -ErrorAction SilentlyContinue" $(LOG)
    @if exist "$(USERPROFILE)/vcpkg/installed/$(ARCH)-windows/bin/libssl-3-$(ARCH).dll" powershell -Command "Copy-Item \"$(USERPROFILE)/vcpkg/installed/$(ARCH)-windows/bin/libssl-*.dll\" \"$(BUILD)/bin/\" -Force -ErrorAction SilentlyContinue" $(LOG)
    @if exist "$(ME_COM_OPENSSL_PATH)/bin/libcrypto-3-$(ARCH).dll" powershell -Command "Copy-Item \"$(ME_COM_OPENSSL_PATH)/bin/libcrypto-*.dll\" \"$(BUILD)/bin/\" -Force -ErrorAction SilentlyContinue" $(LOG)
    @if exist "$(ME_COM_OPENSSL_PATH)/bin/libssl-3-$(ARCH).dll" powershell -Command "Copy-Item \"$(ME_COM_OPENSSL_PATH)/bin/libssl-*.dll\" \"$(BUILD)/bin/\" -Force -ErrorAction SilentlyContinue" $(LOG)
!IF "$(SHOW)" != ""
	@echo ..... [Info] Use "make SHOW=1" to trace executed commands and errors.
LOG =
!ELSE
LOG = >nul
!ENDIF

test::
    .\projects\win-prep.bat
    tm 

clean:
	powershell -Command "if (Test-Path '$(BUILD)/obj/action.obj') { Remove-Item '$(BUILD)/obj/action.obj' }"
	powershell -Command "if (Test-Path '$(BUILD)/obj/alloc.obj') { Remove-Item '$(BUILD)/obj/alloc.obj' }"
	powershell -Command "if (Test-Path '$(BUILD)/obj/auth.obj') { Remove-Item '$(BUILD)/obj/auth.obj' }"
	powershell -Command "if (Test-Path '$(BUILD)/obj/cgi.obj') { Remove-Item '$(BUILD)/obj/cgi.obj' }"
	powershell -Command "if (Test-Path '$(BUILD)/obj/cgitest.obj') { Remove-Item '$(BUILD)/obj/cgitest.obj' }"
	powershell -Command "if (Test-Path '$(BUILD)/obj/crypt.obj') { Remove-Item '$(BUILD)/obj/crypt.obj' }"
	powershell -Command "if (Test-Path '$(BUILD)/obj/file.obj') { Remove-Item '$(BUILD)/obj/file.obj' }"
	powershell -Command "if (Test-Path '$(BUILD)/obj/fs.obj') { Remove-Item '$(BUILD)/obj/fs.obj' }"
	powershell -Command "if (Test-Path '$(BUILD)/obj/goahead.obj') { Remove-Item '$(BUILD)/obj/goahead.obj' }"
	powershell -Command "if (Test-Path '$(BUILD)/obj/gopass.obj') { Remove-Item '$(BUILD)/obj/gopass.obj' }"
	powershell -Command "if (Test-Path '$(BUILD)/obj/http.obj') { Remove-Item '$(BUILD)/obj/http.obj' }"
	powershell -Command "if (Test-Path '$(BUILD)/obj/js.obj') { Remove-Item '$(BUILD)/obj/js.obj' }"
	powershell -Command "if (Test-Path '$(BUILD)/obj/jst.obj') { Remove-Item '$(BUILD)/obj/jst.obj' }"
	powershell -Command "if (Test-Path '$(BUILD)/obj/mbedtls.obj') { Remove-Item '$(BUILD)/obj/mbedtls.obj' }"
	powershell -Command "if (Test-Path '$(BUILD)/obj/openssl.obj') { Remove-Item '$(BUILD)/obj/openssl.obj' }"
	powershell -Command "if (Test-Path '$(BUILD)/obj/options.obj') { Remove-Item '$(BUILD)/obj/options.obj' }"
	powershell -Command "if (Test-Path '$(BUILD)/obj/osdep.obj') { Remove-Item '$(BUILD)/obj/osdep.obj' }"
	powershell -Command "if (Test-Path '$(BUILD)/obj/rom.obj') { Remove-Item '$(BUILD)/obj/rom.obj' }"
	powershell -Command "if (Test-Path '$(BUILD)/obj/route.obj') { Remove-Item '$(BUILD)/obj/route.obj' }"
	powershell -Command "if (Test-Path '$(BUILD)/obj/runtime.obj') { Remove-Item '$(BUILD)/obj/runtime.obj' }"
	powershell -Command "if (Test-Path '$(BUILD)/obj/socket.obj') { Remove-Item '$(BUILD)/obj/socket.obj' }"
	powershell -Command "if (Test-Path '$(BUILD)/obj/test.obj') { Remove-Item '$(BUILD)/obj/test.obj' }"
	powershell -Command "if (Test-Path '$(BUILD)/obj/time.obj') { Remove-Item '$(BUILD)/obj/time.obj' }"
	powershell -Command "if (Test-Path '$(BUILD)/obj/upload.obj') { Remove-Item '$(BUILD)/obj/upload.obj' }"
	powershell -Command "if (Test-Path '$(BUILD)/bin/cgitest.exe') { Remove-Item '$(BUILD)/bin/cgitest.exe' }"
	powershell -Command "if (Test-Path '$(BUILD)/bin/cgitest.lib') { Remove-Item '$(BUILD)/bin/cgitest.lib' }"
	powershell -Command "if (Test-Path '$(BUILD)/bin/cgitest.pdb') { Remove-Item '$(BUILD)/bin/cgitest.pdb' }"
	powershell -Command "if (Test-Path '$(BUILD)/bin/cgitest.exp') { Remove-Item '$(BUILD)/bin/cgitest.exp' }"
	powershell -Command "if (Test-Path '$(BUILD)/bin/goahead.exe') { Remove-Item '$(BUILD)/bin/goahead.exe' }"
	powershell -Command "if (Test-Path '$(BUILD)/bin/goahead.lib') { Remove-Item '$(BUILD)/bin/goahead.lib' }"
	powershell -Command "if (Test-Path '$(BUILD)/bin/goahead.pdb') { Remove-Item '$(BUILD)/bin/goahead.pdb' }"
	powershell -Command "if (Test-Path '$(BUILD)/bin/goahead.exp') { Remove-Item '$(BUILD)/bin/goahead.exp' }"
	powershell -Command "if (Test-Path '$(BUILD)/bin/goahead-test.exe') { Remove-Item '$(BUILD)/bin/goahead-test.exe' }"
	powershell -Command "if (Test-Path '$(BUILD)/bin/goahead-test.lib') { Remove-Item '$(BUILD)/bin/goahead-test.lib' }"
	powershell -Command "if (Test-Path '$(BUILD)/bin/goahead-test.pdb') { Remove-Item '$(BUILD)/bin/goahead-test.pdb' }"
	powershell -Command "if (Test-Path '$(BUILD)/bin/goahead-test.exp') { Remove-Item '$(BUILD)/bin/goahead-test.exp' }"
	powershell -Command "if (Test-Path '$(BUILD)/bin/gopass.exe') { Remove-Item '$(BUILD)/bin/gopass.exe' }"
	powershell -Command "if (Test-Path '$(BUILD)/bin/gopass.lib') { Remove-Item '$(BUILD)/bin/gopass.lib' }"
	powershell -Command "if (Test-Path '$(BUILD)/bin/gopass.pdb') { Remove-Item '$(BUILD)/bin/gopass.pdb' }"
	powershell -Command "if (Test-Path '$(BUILD)/bin/gopass.exp') { Remove-Item '$(BUILD)/bin/gopass.exp' }"
	powershell -Command "if (Test-Path '$(BUILD)/bin/libgo.dll') { Remove-Item '$(BUILD)/bin/libgo.dll' }"
	powershell -Command "if (Test-Path '$(BUILD)/bin/libgo.lib') { Remove-Item '$(BUILD)/bin/libgo.lib' }"
	powershell -Command "if (Test-Path '$(BUILD)/bin/libgo.pdb') { Remove-Item '$(BUILD)/bin/libgo.pdb' }"
	powershell -Command "if (Test-Path '$(BUILD)/bin/libgo.exp') { Remove-Item '$(BUILD)/bin/libgo.exp' }"

#
#   me.h
#

$(BUILD)/inc/me.h: $(DEPS_1)

#
#   osdep.h
#
DEPS_2 = $(DEPS_2) src/osdep/osdep.h
DEPS_2 = $(DEPS_2) $(BUILD)/inc/me.h

$(BUILD)/inc/osdep.h: $(DEPS_2)
	@echo ..... [Copy] $(BUILD)/inc/osdep.h
	powershell -Command "New-Item -Path $(BUILD)/inc -ItemType Directory -Force | Out-Null"
	powershell -Command "Copy-Item \"src/osdep/osdep.h\" \"$(BUILD)/inc/osdep.h\" -Force" $(LOG)

#
#   goahead.h
#
DEPS_3 = $(DEPS_3) src/goahead.h
DEPS_3 = $(DEPS_3) $(BUILD)/inc/me.h
DEPS_3 = $(DEPS_3) $(BUILD)/inc/osdep.h

$(BUILD)/inc/goahead.h: $(DEPS_3)
	@echo ..... [Copy] $(BUILD)/inc/goahead.h
	powershell -Command "New-Item -Path $(BUILD)/inc -ItemType Directory -Force | Out-Null"
	powershell -Command "Copy-Item \"src/goahead.h\" \"$(BUILD)/inc/goahead.h\" -Force" $(LOG)

#
#   js.h
#
DEPS_4 = $(DEPS_4) src/js.h
DEPS_4 = $(DEPS_4) $(BUILD)/inc/goahead.h

$(BUILD)/inc/js.h: $(DEPS_4)
	@echo ..... [Copy] $(BUILD)/inc/js.h
	powershell -Command "New-Item -Path $(BUILD)/inc -ItemType Directory -Force | Out-Null"
	powershell -Command "Copy-Item \"src/js.h\" \"$(BUILD)/inc/js.h\" -Force" $(LOG)

#
#   action.obj
#
DEPS_5 = $(DEPS_5) $(BUILD)/inc/goahead.h

$(BUILD)/obj/action.obj: \
    src/action.c $(DEPS_5)
	@echo .. [Compile] $(BUILD)/obj/action.obj
	"$(CC)" -c -Fo"$(BUILD)/obj/action.obj" -Fd"$(BUILD)/obj/action.pdb" $(CFLAGS) $(DFLAGS) "-DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH)" "-DME_COM_MBEDTLS_PATH=$(ME_COM_MBEDTLS_PATH)" $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)/include" "-I$(ME_COM_MBEDTLS_PATH)/include" $(INPUT) "src/action.c" $(LOG)

#
#   alloc.obj
#
DEPS_6 = $(DEPS_6) $(BUILD)/inc/goahead.h

$(BUILD)/obj/alloc.obj: \
    src/alloc.c $(DEPS_6)
	@echo .. [Compile] $(BUILD)/obj/alloc.obj
	"$(CC)" -c -Fo"$(BUILD)/obj/alloc.obj" -Fd"$(BUILD)/obj/alloc.pdb" $(CFLAGS) $(DFLAGS) "-DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH)" "-DME_COM_MBEDTLS_PATH=$(ME_COM_MBEDTLS_PATH)" $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)/include" "-I$(ME_COM_MBEDTLS_PATH)/include" $(INPUT) "src/alloc.c" $(LOG)

#
#   auth.obj
#
DEPS_7 = $(DEPS_7) $(BUILD)/inc/goahead.h

$(BUILD)/obj/auth.obj: \
    src/auth.c $(DEPS_7)
	@echo .. [Compile] $(BUILD)/obj/auth.obj
	"$(CC)" -c -Fo"$(BUILD)/obj/auth.obj" -Fd"$(BUILD)/obj/auth.pdb" $(CFLAGS) $(DFLAGS) "-DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH)" "-DME_COM_MBEDTLS_PATH=$(ME_COM_MBEDTLS_PATH)" $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)/include" "-I$(ME_COM_MBEDTLS_PATH)/include" $(INPUT) "src/auth.c" $(LOG)

#
#   cgi.obj
#
DEPS_8 = $(DEPS_8) $(BUILD)/inc/goahead.h

$(BUILD)/obj/cgi.obj: \
    src/cgi.c $(DEPS_8)
	@echo .. [Compile] $(BUILD)/obj/cgi.obj
	"$(CC)" -c -Fo"$(BUILD)/obj/cgi.obj" -Fd"$(BUILD)/obj/cgi.pdb" $(CFLAGS) $(DFLAGS) "-DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH)" "-DME_COM_MBEDTLS_PATH=$(ME_COM_MBEDTLS_PATH)" $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)/include" "-I$(ME_COM_MBEDTLS_PATH)/include" $(INPUT) "src/cgi.c" $(LOG)

#
#   cgitest.obj
#

$(BUILD)/obj/cgitest.obj: \
    src/cgitest.c $(DEPS_9)
	@echo .. [Compile] $(BUILD)/obj/cgitest.obj
	"$(CC)" -c -Fo"$(BUILD)/obj/cgitest.obj" -Fd"$(BUILD)/obj/cgitest.pdb" $(CFLAGS) $(DFLAGS) $(IFLAGS) $(INPUT) "src/cgitest.c" $(LOG)

#
#   crypt.obj
#
DEPS_10 = $(DEPS_10) $(BUILD)/inc/goahead.h

$(BUILD)/obj/crypt.obj: \
    src/crypt.c $(DEPS_10)
	@echo .. [Compile] $(BUILD)/obj/crypt.obj
	"$(CC)" -c -Fo"$(BUILD)/obj/crypt.obj" -Fd"$(BUILD)/obj/crypt.pdb" $(CFLAGS) $(DFLAGS) "-DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH)" "-DME_COM_MBEDTLS_PATH=$(ME_COM_MBEDTLS_PATH)" $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)/include" "-I$(ME_COM_MBEDTLS_PATH)/include" $(INPUT) "src/crypt.c" $(LOG)

#
#   file.obj
#
DEPS_11 = $(DEPS_11) $(BUILD)/inc/goahead.h

$(BUILD)/obj/file.obj: \
    src/file.c $(DEPS_11)
	@echo .. [Compile] $(BUILD)/obj/file.obj
	"$(CC)" -c -Fo"$(BUILD)/obj/file.obj" -Fd"$(BUILD)/obj/file.pdb" $(CFLAGS) $(DFLAGS) "-DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH)" "-DME_COM_MBEDTLS_PATH=$(ME_COM_MBEDTLS_PATH)" $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)/include" "-I$(ME_COM_MBEDTLS_PATH)/include" $(INPUT) "src/file.c" $(LOG)

#
#   fs.obj
#
DEPS_12 = $(DEPS_12) $(BUILD)/inc/goahead.h

$(BUILD)/obj/fs.obj: \
    src/fs.c $(DEPS_12)
	@echo .. [Compile] $(BUILD)/obj/fs.obj
	"$(CC)" -c -Fo"$(BUILD)/obj/fs.obj" -Fd"$(BUILD)/obj/fs.pdb" $(CFLAGS) $(DFLAGS) "-DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH)" "-DME_COM_MBEDTLS_PATH=$(ME_COM_MBEDTLS_PATH)" $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)/include" "-I$(ME_COM_MBEDTLS_PATH)/include" $(INPUT) "src/fs.c" $(LOG)

#
#   goahead.obj
#
DEPS_13 = $(DEPS_13) $(BUILD)/inc/goahead.h

$(BUILD)/obj/goahead.obj: \
    src/goahead.c $(DEPS_13)
	@echo .. [Compile] $(BUILD)/obj/goahead.obj
	"$(CC)" -c -Fo"$(BUILD)/obj/goahead.obj" -Fd"$(BUILD)/obj/goahead.pdb" $(CFLAGS) $(DFLAGS) "-DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH)" "-DME_COM_MBEDTLS_PATH=$(ME_COM_MBEDTLS_PATH)" $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)/include" "-I$(ME_COM_MBEDTLS_PATH)/include" $(INPUT) "src/goahead.c" $(LOG)

#
#   gopass.obj
#
DEPS_14 = $(DEPS_14) $(BUILD)/inc/goahead.h

$(BUILD)/obj/gopass.obj: \
    src/utils/gopass.c $(DEPS_14)
	@echo .. [Compile] $(BUILD)/obj/gopass.obj
	"$(CC)" -c -Fo"$(BUILD)/obj/gopass.obj" -Fd"$(BUILD)/obj/gopass.pdb" $(CFLAGS) $(DFLAGS) "-DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH)" "-DME_COM_MBEDTLS_PATH=$(ME_COM_MBEDTLS_PATH)" $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)/include" "-I$(ME_COM_MBEDTLS_PATH)/include" $(INPUT) "src/utils/gopass.c" $(LOG)

#
#   http.obj
#
DEPS_15 = $(DEPS_15) $(BUILD)/inc/goahead.h

$(BUILD)/obj/http.obj: \
    src/http.c $(DEPS_15)
	@echo .. [Compile] $(BUILD)/obj/http.obj
	"$(CC)" -c -Fo"$(BUILD)/obj/http.obj" -Fd"$(BUILD)/obj/http.pdb" $(CFLAGS) $(DFLAGS) "-DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH)" "-DME_COM_MBEDTLS_PATH=$(ME_COM_MBEDTLS_PATH)" $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)/include" "-I$(ME_COM_MBEDTLS_PATH)/include" $(INPUT) "src/http.c" $(LOG)

#
#   js.obj
#
DEPS_16 = $(DEPS_16) $(BUILD)/inc/js.h

$(BUILD)/obj/js.obj: \
    src/js.c $(DEPS_16)
	@echo .. [Compile] $(BUILD)/obj/js.obj
	"$(CC)" -c -Fo"$(BUILD)/obj/js.obj" -Fd"$(BUILD)/obj/js.pdb" $(CFLAGS) $(DFLAGS) "-DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH)" "-DME_COM_MBEDTLS_PATH=$(ME_COM_MBEDTLS_PATH)" $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)/include" "-I$(ME_COM_MBEDTLS_PATH)/include" $(INPUT) "src/js.c" $(LOG)

#
#   jst.obj
#
DEPS_17 = $(DEPS_17) $(BUILD)/inc/goahead.h
DEPS_17 = $(DEPS_17) $(BUILD)/inc/js.h

$(BUILD)/obj/jst.obj: \
    src/jst.c $(DEPS_17)
	@echo .. [Compile] $(BUILD)/obj/jst.obj
	"$(CC)" -c -Fo"$(BUILD)/obj/jst.obj" -Fd"$(BUILD)/obj/jst.pdb" $(CFLAGS) $(DFLAGS) "-DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH)" "-DME_COM_MBEDTLS_PATH=$(ME_COM_MBEDTLS_PATH)" $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)/include" "-I$(ME_COM_MBEDTLS_PATH)/include" $(INPUT) "src/jst.c" $(LOG)

#
#   mbedtls.obj
#
DEPS_18 = $(DEPS_18) $(BUILD)/inc/goahead.h

$(BUILD)/obj/mbedtls.obj: \
    src/mbedtls.c $(DEPS_18)
	@echo .. [Compile] $(BUILD)/obj/mbedtls.obj
	"$(CC)" -c -Fo"$(BUILD)/obj/mbedtls.obj" -Fd"$(BUILD)/obj/mbedtls.pdb" $(CFLAGS) $(DFLAGS) "-DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH)" "-DME_COM_MBEDTLS_PATH=$(ME_COM_MBEDTLS_PATH)" $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)/include" "-I$(ME_COM_MBEDTLS_PATH)/include" $(INPUT) "src/mbedtls.c" $(LOG)

#
#   openssl.obj
#
DEPS_19 = $(DEPS_19) $(BUILD)/inc/goahead.h

$(BUILD)/obj/openssl.obj: \
    src/openssl.c $(DEPS_19)
	@echo .. [Compile] $(BUILD)/obj/openssl.obj
	"$(CC)" -c -Fo"$(BUILD)/obj/openssl.obj" -Fd"$(BUILD)/obj/openssl.pdb" $(CFLAGS) $(DFLAGS) "-DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH)" "-DME_COM_MBEDTLS_PATH=$(ME_COM_MBEDTLS_PATH)" $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)/include" "-I$(ME_COM_MBEDTLS_PATH)/include" $(INPUT) "src/openssl.c" $(LOG)

#
#   options.obj
#
DEPS_20 = $(DEPS_20) $(BUILD)/inc/goahead.h

$(BUILD)/obj/options.obj: \
    src/options.c $(DEPS_20)
	@echo .. [Compile] $(BUILD)/obj/options.obj
	"$(CC)" -c -Fo"$(BUILD)/obj/options.obj" -Fd"$(BUILD)/obj/options.pdb" $(CFLAGS) $(DFLAGS) "-DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH)" "-DME_COM_MBEDTLS_PATH=$(ME_COM_MBEDTLS_PATH)" $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)/include" "-I$(ME_COM_MBEDTLS_PATH)/include" $(INPUT) "src/options.c" $(LOG)

#
#   osdep.obj
#
DEPS_21 = $(DEPS_21) $(BUILD)/inc/goahead.h

$(BUILD)/obj/osdep.obj: \
    src/osdep.c $(DEPS_21)
	@echo .. [Compile] $(BUILD)/obj/osdep.obj
	"$(CC)" -c -Fo"$(BUILD)/obj/osdep.obj" -Fd"$(BUILD)/obj/osdep.pdb" $(CFLAGS) $(DFLAGS) "-DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH)" "-DME_COM_MBEDTLS_PATH=$(ME_COM_MBEDTLS_PATH)" $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)/include" "-I$(ME_COM_MBEDTLS_PATH)/include" $(INPUT) "src/osdep.c" $(LOG)

#
#   rom.obj
#
DEPS_22 = $(DEPS_22) $(BUILD)/inc/goahead.h

$(BUILD)/obj/rom.obj: \
    src/rom.c $(DEPS_22)
	@echo .. [Compile] $(BUILD)/obj/rom.obj
	"$(CC)" -c -Fo"$(BUILD)/obj/rom.obj" -Fd"$(BUILD)/obj/rom.pdb" $(CFLAGS) $(DFLAGS) "-DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH)" "-DME_COM_MBEDTLS_PATH=$(ME_COM_MBEDTLS_PATH)" $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)/include" "-I$(ME_COM_MBEDTLS_PATH)/include" $(INPUT) "src/rom.c" $(LOG)

#
#   route.obj
#
DEPS_23 = $(DEPS_23) $(BUILD)/inc/goahead.h

$(BUILD)/obj/route.obj: \
    src/route.c $(DEPS_23)
	@echo .. [Compile] $(BUILD)/obj/route.obj
	"$(CC)" -c -Fo"$(BUILD)/obj/route.obj" -Fd"$(BUILD)/obj/route.pdb" $(CFLAGS) $(DFLAGS) "-DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH)" "-DME_COM_MBEDTLS_PATH=$(ME_COM_MBEDTLS_PATH)" $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)/include" "-I$(ME_COM_MBEDTLS_PATH)/include" $(INPUT) "src/route.c" $(LOG)

#
#   runtime.obj
#
DEPS_24 = $(DEPS_24) $(BUILD)/inc/goahead.h

$(BUILD)/obj/runtime.obj: \
    src/runtime.c $(DEPS_24)
	@echo .. [Compile] $(BUILD)/obj/runtime.obj
	"$(CC)" -c -Fo"$(BUILD)/obj/runtime.obj" -Fd"$(BUILD)/obj/runtime.pdb" $(CFLAGS) $(DFLAGS) "-DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH)" "-DME_COM_MBEDTLS_PATH=$(ME_COM_MBEDTLS_PATH)" $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)/include" "-I$(ME_COM_MBEDTLS_PATH)/include" $(INPUT) "src/runtime.c" $(LOG)

#
#   socket.obj
#
DEPS_25 = $(DEPS_25) $(BUILD)/inc/goahead.h

$(BUILD)/obj/socket.obj: \
    src/socket.c $(DEPS_25)
	@echo .. [Compile] $(BUILD)/obj/socket.obj
	"$(CC)" -c -Fo"$(BUILD)/obj/socket.obj" -Fd"$(BUILD)/obj/socket.pdb" $(CFLAGS) $(DFLAGS) "-DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH)" "-DME_COM_MBEDTLS_PATH=$(ME_COM_MBEDTLS_PATH)" $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)/include" "-I$(ME_COM_MBEDTLS_PATH)/include" $(INPUT) "src/socket.c" $(LOG)

#
#   test.obj
#
DEPS_26 = $(DEPS_26) $(BUILD)/inc/goahead.h
DEPS_26 = $(DEPS_26) $(BUILD)/inc/js.h

$(BUILD)/obj/test.obj: \
    src/test.c $(DEPS_26)
	@echo .. [Compile] $(BUILD)/obj/test.obj
	"$(CC)" -c -Fo"$(BUILD)/obj/test.obj" -Fd"$(BUILD)/obj/test.pdb" $(CFLAGS) $(DFLAGS) "-DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH)" "-DME_COM_MBEDTLS_PATH=$(ME_COM_MBEDTLS_PATH)" $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)/include" "-I$(ME_COM_MBEDTLS_PATH)/include" $(INPUT) "src/test.c" $(LOG)

#
#   time.obj
#
DEPS_27 = $(DEPS_27) $(BUILD)/inc/goahead.h

$(BUILD)/obj/time.obj: \
    src/time.c $(DEPS_27)
	@echo .. [Compile] $(BUILD)/obj/time.obj
	"$(CC)" -c -Fo"$(BUILD)/obj/time.obj" -Fd"$(BUILD)/obj/time.pdb" $(CFLAGS) $(DFLAGS) "-DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH)" "-DME_COM_MBEDTLS_PATH=$(ME_COM_MBEDTLS_PATH)" $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)/include" "-I$(ME_COM_MBEDTLS_PATH)/include" $(INPUT) "src/time.c" $(LOG)

#
#   upload.obj
#
DEPS_28 = $(DEPS_28) $(BUILD)/inc/goahead.h

$(BUILD)/obj/upload.obj: \
    src/upload.c $(DEPS_28)
	@echo .. [Compile] $(BUILD)/obj/upload.obj
	"$(CC)" -c -Fo"$(BUILD)/obj/upload.obj" -Fd"$(BUILD)/obj/upload.pdb" $(CFLAGS) $(DFLAGS) "-DME_COM_OPENSSL_PATH=$(ME_COM_OPENSSL_PATH)" "-DME_COM_MBEDTLS_PATH=$(ME_COM_MBEDTLS_PATH)" $(IFLAGS) "-I$(ME_COM_OPENSSL_PATH)/include" "-I$(ME_COM_MBEDTLS_PATH)/include" $(INPUT) "src/upload.c" $(LOG)

#
#   cgitest
#
DEPS_29 = $(DEPS_29) $(BUILD)/obj/cgitest.obj

$(BUILD)/bin/cgitest.exe: $(DEPS_29)
	@echo ..... [Link] $(BUILD)/bin/cgitest.exe
	"$(LD)" -nologo -out:"$(BUILD)/bin/cgitest.exe" -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(INPUT) "$(BUILD)/obj/cgitest.obj" $(LIBS)  $(LOG)

#
#   libgo
#
DEPS_30 = $(DEPS_30) $(BUILD)/inc/osdep.h
DEPS_30 = $(DEPS_30) $(BUILD)/inc/goahead.h
DEPS_30 = $(DEPS_30) $(BUILD)/inc/js.h
DEPS_30 = $(DEPS_30) $(BUILD)/obj/action.obj
DEPS_30 = $(DEPS_30) $(BUILD)/obj/alloc.obj
DEPS_30 = $(DEPS_30) $(BUILD)/obj/auth.obj
DEPS_30 = $(DEPS_30) $(BUILD)/obj/cgi.obj
DEPS_30 = $(DEPS_30) $(BUILD)/obj/crypt.obj
DEPS_30 = $(DEPS_30) $(BUILD)/obj/file.obj
DEPS_30 = $(DEPS_30) $(BUILD)/obj/fs.obj
DEPS_30 = $(DEPS_30) $(BUILD)/obj/http.obj
DEPS_30 = $(DEPS_30) $(BUILD)/obj/js.obj
DEPS_30 = $(DEPS_30) $(BUILD)/obj/jst.obj
DEPS_30 = $(DEPS_30) $(BUILD)/obj/mbedtls.obj
DEPS_30 = $(DEPS_30) $(BUILD)/obj/openssl.obj
DEPS_30 = $(DEPS_30) $(BUILD)/obj/options.obj
DEPS_30 = $(DEPS_30) $(BUILD)/obj/osdep.obj
DEPS_30 = $(DEPS_30) $(BUILD)/obj/rom.obj
DEPS_30 = $(DEPS_30) $(BUILD)/obj/route.obj
DEPS_30 = $(DEPS_30) $(BUILD)/obj/runtime.obj
DEPS_30 = $(DEPS_30) $(BUILD)/obj/socket.obj
DEPS_30 = $(DEPS_30) $(BUILD)/obj/time.obj
DEPS_30 = $(DEPS_30) $(BUILD)/obj/upload.obj

!IF "$(ME_COM_MBEDTLS)" == "1"
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_30 = $(LIBS_30) mbedtls.lib
LIBPATHS_30 = $(LIBPATHS_30) "-libpath:$(ME_COM_MBEDTLS_PATH)/lib"
LIBPATHS_30 = $(LIBPATHS_30) "-libpath:$(ME_COM_MBEDTLS_PATH)/library"
!ENDIF
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_30 = $(LIBS_30) mbedcrypto.lib
LIBPATHS_30 = $(LIBPATHS_30) "-libpath:$(ME_COM_MBEDTLS_PATH)/lib"
LIBPATHS_30 = $(LIBPATHS_30) "-libpath:$(ME_COM_MBEDTLS_PATH)/library"
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_30 = $(LIBS_30) mbedx509.lib
LIBPATHS_30 = $(LIBPATHS_30) "-libpath:$(ME_COM_MBEDTLS_PATH)/lib"
LIBPATHS_30 = $(LIBPATHS_30) "-libpath:$(ME_COM_MBEDTLS_PATH)/library"
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_30 = $(LIBS_30) libcrypto.lib
LIBPATHS_30 = $(LIBPATHS_30) "-libpath:$(ME_COM_OPENSSL_PATH)/lib"
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_30 = $(LIBS_30) libssl.lib
LIBPATHS_30 = $(LIBPATHS_30) "-libpath:$(ME_COM_OPENSSL_PATH)/lib"
!ENDIF

$(BUILD)/bin/libgo.dll: $(DEPS_30)
	@echo ..... [Link] $(BUILD)/bin/libgo.dll
	"$(LD)" -dll -out:"$(BUILD)/bin/libgo.dll" -entry:_DllMainCRTStartup $(LDFLAGS) $(LIBPATHS) $(INPUT) "$(BUILD)/obj/action.obj" "$(BUILD)/obj/alloc.obj" "$(BUILD)/obj/auth.obj" "$(BUILD)/obj/cgi.obj" "$(BUILD)/obj/crypt.obj" "$(BUILD)/obj/file.obj" "$(BUILD)/obj/fs.obj" "$(BUILD)/obj/http.obj" "$(BUILD)/obj/js.obj" "$(BUILD)/obj/jst.obj" "$(BUILD)/obj/mbedtls.obj" "$(BUILD)/obj/openssl.obj" "$(BUILD)/obj/options.obj" "$(BUILD)/obj/osdep.obj" "$(BUILD)/obj/rom.obj" "$(BUILD)/obj/route.obj" "$(BUILD)/obj/runtime.obj" "$(BUILD)/obj/socket.obj" "$(BUILD)/obj/time.obj" "$(BUILD)/obj/upload.obj" $(LIBPATHS_30) $(LIBS_30) $(LIBS)  $(LOG)

#
#   goahead
#
DEPS_31 = $(DEPS_31) $(BUILD)/bin/libgo.dll
DEPS_31 = $(DEPS_31) $(BUILD)/inc/goahead.h
DEPS_31 = $(DEPS_31) $(BUILD)/inc/js.h
DEPS_31 = $(DEPS_31) $(BUILD)/obj/goahead.obj

LIBS_31 = $(LIBS_31) libgo.lib
!IF "$(ME_COM_MBEDTLS)" == "1"
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_31 = $(LIBS_31) mbedtls.lib
LIBPATHS_31 = $(LIBPATHS_31) "-libpath:$(ME_COM_MBEDTLS_PATH)/lib"
LIBPATHS_31 = $(LIBPATHS_31) "-libpath:$(ME_COM_MBEDTLS_PATH)/library"
!ENDIF
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_31 = $(LIBS_31) mbedcrypto.lib
LIBPATHS_31 = $(LIBPATHS_31) "-libpath:$(ME_COM_MBEDTLS_PATH)/lib"
LIBPATHS_31 = $(LIBPATHS_31) "-libpath:$(ME_COM_MBEDTLS_PATH)/library"
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_31 = $(LIBS_31) mbedx509.lib
LIBPATHS_31 = $(LIBPATHS_31) "-libpath:$(ME_COM_MBEDTLS_PATH)/lib"
LIBPATHS_31 = $(LIBPATHS_31) "-libpath:$(ME_COM_MBEDTLS_PATH)/library"
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_31 = $(LIBS_31) libcrypto.lib
LIBPATHS_31 = $(LIBPATHS_31) "-libpath:$(ME_COM_OPENSSL_PATH)/lib"
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_31 = $(LIBS_31) libssl.lib
LIBPATHS_31 = $(LIBPATHS_31) "-libpath:$(ME_COM_OPENSSL_PATH)/lib"
!ENDIF

$(BUILD)/bin/goahead.exe: $(DEPS_31)
	@echo ..... [Link] $(BUILD)/bin/goahead.exe
	"$(LD)" -nologo -out:"$(BUILD)/bin/goahead.exe" -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(INPUT) "$(BUILD)/obj/goahead.obj" $(LIBPATHS_31) $(LIBS_31) $(LIBS)  $(LOG)

#
#   goahead-test
#
DEPS_32 = $(DEPS_32) $(BUILD)/bin/libgo.dll
DEPS_32 = $(DEPS_32) $(BUILD)/obj/test.obj

LIBS_32 = $(LIBS_32) libgo.lib
!IF "$(ME_COM_MBEDTLS)" == "1"
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_32 = $(LIBS_32) mbedtls.lib
LIBPATHS_32 = $(LIBPATHS_32) "-libpath:$(ME_COM_MBEDTLS_PATH)/lib"
LIBPATHS_32 = $(LIBPATHS_32) "-libpath:$(ME_COM_MBEDTLS_PATH)/library"
!ENDIF
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_32 = $(LIBS_32) mbedcrypto.lib
LIBPATHS_32 = $(LIBPATHS_32) "-libpath:$(ME_COM_MBEDTLS_PATH)/lib"
LIBPATHS_32 = $(LIBPATHS_32) "-libpath:$(ME_COM_MBEDTLS_PATH)/library"
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_32 = $(LIBS_32) mbedx509.lib
LIBPATHS_32 = $(LIBPATHS_32) "-libpath:$(ME_COM_MBEDTLS_PATH)/lib"
LIBPATHS_32 = $(LIBPATHS_32) "-libpath:$(ME_COM_MBEDTLS_PATH)/library"
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_32 = $(LIBS_32) libcrypto.lib
LIBPATHS_32 = $(LIBPATHS_32) "-libpath:$(ME_COM_OPENSSL_PATH)/lib"
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_32 = $(LIBS_32) libssl.lib
LIBPATHS_32 = $(LIBPATHS_32) "-libpath:$(ME_COM_OPENSSL_PATH)/lib"
!ENDIF

$(BUILD)/bin/goahead-test.exe: $(DEPS_32)
	@echo ..... [Link] $(BUILD)/bin/goahead-test.exe
	"$(LD)" -nologo -out:"$(BUILD)/bin/goahead-test.exe" -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(INPUT) "$(BUILD)/obj/test.obj" $(LIBPATHS_32) $(LIBS_32) $(LIBS)  $(LOG)

#
#   gopass
#
DEPS_33 = $(DEPS_33) $(BUILD)/bin/libgo.dll
DEPS_33 = $(DEPS_33) $(BUILD)/inc/goahead.h
DEPS_33 = $(DEPS_33) $(BUILD)/inc/js.h
DEPS_33 = $(DEPS_33) $(BUILD)/obj/gopass.obj

LIBS_33 = $(LIBS_33) libgo.lib
!IF "$(ME_COM_MBEDTLS)" == "1"
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_33 = $(LIBS_33) mbedtls.lib
LIBPATHS_33 = $(LIBPATHS_33) "-libpath:$(ME_COM_MBEDTLS_PATH)/lib"
LIBPATHS_33 = $(LIBPATHS_33) "-libpath:$(ME_COM_MBEDTLS_PATH)/library"
!ENDIF
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_33 = $(LIBS_33) mbedcrypto.lib
LIBPATHS_33 = $(LIBPATHS_33) "-libpath:$(ME_COM_MBEDTLS_PATH)/lib"
LIBPATHS_33 = $(LIBPATHS_33) "-libpath:$(ME_COM_MBEDTLS_PATH)/library"
!ENDIF
!IF "$(ME_COM_MBEDTLS)" == "1"
LIBS_33 = $(LIBS_33) mbedx509.lib
LIBPATHS_33 = $(LIBPATHS_33) "-libpath:$(ME_COM_MBEDTLS_PATH)/lib"
LIBPATHS_33 = $(LIBPATHS_33) "-libpath:$(ME_COM_MBEDTLS_PATH)/library"
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_33 = $(LIBS_33) libcrypto.lib
LIBPATHS_33 = $(LIBPATHS_33) "-libpath:$(ME_COM_OPENSSL_PATH)/lib"
!ENDIF
!IF "$(ME_COM_OPENSSL)" == "1"
LIBS_33 = $(LIBS_33) libssl.lib
LIBPATHS_33 = $(LIBPATHS_33) "-libpath:$(ME_COM_OPENSSL_PATH)/lib"
!ENDIF

$(BUILD)/bin/gopass.exe: $(DEPS_33)
	@echo ..... [Link] $(BUILD)/bin/gopass.exe
	"$(LD)" -nologo -out:"$(BUILD)/bin/gopass.exe" -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) $(INPUT) "$(BUILD)/obj/gopass.obj" $(LIBPATHS_33) $(LIBS_33) $(LIBS)  $(LOG)

#
#   stop
#

stop: $(DEPS_34)
#  Omit build script stop

#
#   installBinary
#

installBinary: $(DEPS_35)
	powershell -Command "New-Item -Path $(ME_VAPP_PREFIX)/man/man1 -ItemType Directory -Force | Out-Null"
	powershell -Command "New-Item -Path $(ME_VAPP_PREFIX)/bin -ItemType Directory -Force | Out-Null"
	powershell -Command "New-Item -Path $(ME_VAPP_PREFIX)/bin -ItemType Directory -Force | Out-Null"
	powershell -Command "Copy-Item \"certs/roots.crt\" \"$(ME_VAPP_PREFIX)/bin/roots.crt\" -Force" $(LOG)
	powershell -Command "New-Item -Path $(ME_VAPP_PREFIX) -ItemType Directory -Force | Out-Null"
	powershell -Command "Copy-Item \"certs/self.crt\" \"$(ME_VAPP_PREFIX)/self.crt\" -Force" $(LOG)
	powershell -Command "New-Item -Path $(ME_BASE_PREFIX) -ItemType Directory -Force | Out-Null"
	powershell -Command "Copy-Item \"certs/self.key\" \"$(ME_VAPP_PREFIX)\" -Force" $(LOG)
	powershell -Command "New-Item -Path $(ME_VAPP_PREFIX)/web -ItemType Directory -Force | Out-Null"
	powershell -Command "Copy-Item \"src/web/index.html\" \"$(ME_VAPP_PREFIX)/web/index.html\" -Force" $(LOG)
	powershell -Command "Copy-Item \"src/web/favicon.ico\" \"$(ME_VAPP_PREFIX)/web/favicon.ico\" -Force" $(LOG)
	powershell -Command "New-Item -Path $(ME_VAPP_PREFIX) -ItemType Directory -Force | Out-Null"
	powershell -Command "Copy-Item \"src/auth.txt\" \"$(ME_VAPP_PREFIX)/auth.txt\" -Force" $(LOG)
	powershell -Command "Copy-Item \"src/route.txt\" \"$(ME_VAPP_PREFIX)/route.txt\" -Force" $(LOG)
	powershell -Command "New-Item -Path $(ME_VAPP_PREFIX)/bin -ItemType Directory -Force | Out-Null"

#
#   start
#

start: $(DEPS_36)
#  Omit build script start

#
#   install
#
DEPS_37 = $(DEPS_37) stop
DEPS_37 = $(DEPS_37) installBinary
DEPS_37 = $(DEPS_37) start

install: $(DEPS_37)
#  Omit build script install

#
#   installPrep
#

installPrep: $(DEPS_38)
#  Omit build script installPrep

#
#   uninstall
#
DEPS_39 = $(DEPS_39) stop

uninstall: $(DEPS_39)
#  Omit build script uninstall

#
#   uninstallBinary
#

uninstallBinary: $(DEPS_40)
	if exist "$(ME_VAPP_PREFIX)/web" rd /Q /S "$(ME_VAPP_PREFIX)/web"
	if exist "$(ME_VAPP_PREFIX)" rd /Q /S "$(ME_VAPP_PREFIX)"
	if exist "$(ME_VAPP_PREFIX)/bin" rd /Q "$(ME_VAPP_PREFIX)/bin"
	if exist "$(ME_VAPP_PREFIX)/man" rd /Q "$(ME_VAPP_PREFIX)/man"
	if exist "$(ME_VAPP_PREFIX)" rd /Q "$(ME_VAPP_PREFIX)"
	if exist "$(ME_VAPP_PREFIX)/web" rd /Q "$(ME_VAPP_PREFIX)/web"
	if exist "$(ME_VAPP_PREFIX)" rd /Q "$(ME_VAPP_PREFIX)"

